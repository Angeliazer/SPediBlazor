@page "/clientes"
@attribute [StreamRendering]
@inject HttpClient _http
@rendermode @(new InteractiveServerRenderMode (prerender:false))

<PageTitle>Clientes</PageTitle>

<div class="container">

    <h3>Clientes</h3>
    @if (Show)
    {
        <ModalConfirma @ref="ModalConf" Exibir=@Show Title="Confirma Exclusão?" EventodeRetorno="@(()=>RetornoFuncao())">
            <div>
                <br />
                <br />
                <h6>Cliente: @Objcliente.NomeCliente</h6>
            </div>
        </ModalConfirma>
    }
    @if (clientes == null)
    {
        <p><em>Aguarde...</em></p>
    }
    else
    {
        <button class="btn-sm btn-primary" style="font-style:italic" @onclick="NewCliente">Novo Cliente</button>
        <table class="table">
            <thead>
                <tr>
                    <th>Nome Cliente</th>
                    <th>Nro Telefone</th>
                    <th>Contato     </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in clientes)
                {
                    <tr>
                        <td>@item.NomeCliente</td>
                        <td>@item.NroTelefone</td>
                        <td>@item.NomeContato</td>
                        <td><button class="btn-sm btn-danger" data-toggle="modal" @onclick="@(() => Apagar(item))">Deletar </button></td>
                        <td><button class="btn-sm btn-primary" @onclick="@(()=>Seleciona(item))">Pedido</button></td>
                        <td><button class="btn-sm btn-secondary" @onclick="@(()=>Seleciona(item))">Alterar</button></td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code
 {
    ModalConfirma? ModalConf = null;

    public List<Cliente>? clientes = null!;
    public bool Show = false;
    public Cliente Objcliente = null!;

    protected override async Task OnInitializedAsync()
    {
        clientes = await _http.GetFromJsonAsync<List<Cliente>>(@"/api/v1/clientes");
    }

    public void Apagar(Cliente cliente)
    {
        Show = true;
        Objcliente = new();
        Objcliente = cliente;
    }

    public async Task RetornoFuncao()
    {
        Show = false;
        switch (ModalConf?.AcaoResultante)
        {
            case "D":
                await ApagaRegistro();
                break;

            case "N":
                break;

            default:

                break;
        }
    }

    public async Task ApagaRegistro()
    {
        await _http.DeleteFromJsonAsync<Cliente>($@"/api/v1/clientes/{Objcliente.ClienteId}");
        await OnInitializedAsync();
    }

    public void Seleciona(Cliente cliente)
    {

    }
    public void NewCliente()
    {

    }
}
