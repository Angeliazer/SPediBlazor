@page "/prodnome"
@rendermode @(new InteractiveServerRenderMode (prerender:false))

<TopBanner Texto="Pesquisa Produto por Nome"></TopBanner>

<div class="mt-0">
    <div class="mt-1">
        <label style="color:darkblue; vertical-align:sub"><em>Produto</em></label>
        <input class="col-6 border border-primary border-2" @oninput="Inicio" style="background-color: antiquewhite; border-radius: 3px" @bind-value="@NomeProduto" />
        <MudaPagina @ref="Muda" PageNumb=@PageNumber TotPa=@TotPag BtnInicial=@BtnInicial EventoRet="(()=>ReturnFunc())"></MudaPagina>
    </div>
</div>

<div class="card mt-1" style="height:580px;">
    <div class="card-body d-flex flex-column  mx-auto" style="width:80%">
        @if (produtos == null)
        {
            <p><em>Aguarde...</em></p>
        }
        else
        {
            <table class="table col-md-12">
                <thead>
                    <tr>
                        <th>Nome Produto</th>
                        <th style="text-align:right">Estoque</th>
                        <th style="text-align:right">Preço   </th>
                        <th style="text-align:right">Data Cadastro</th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (Produto item in produtos)
                    {
                        if (Linha++ % 2 == 0) { cor = "lightgray"; }
                        else { cor = "white"; }
                        <tr>
                            <td style="background-color:@cor">@item.NomeProduto</td>
                            <td style="text-align:right; background-color:@cor">@item.QuantEstoque</td>
                            <td style="text-align:right; background-color:@cor">@item.Preco</td>
                            <td style="text-align:right; background-color:@cor">@DateOnly.FromDateTime(@item.DataCadastro)</td>
                            <td>
                                <button class="btn btn-sm border-dark shadow-none btn-primary" style="font-style:italic; color:white" @onclick="(() => Seleciona(item))">
                                    <i class="bi-search"></i> Seleciona
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>

<div>
    <button class="mt-1 col-1  btn btn-sm btn-primary shadow-none" style="color:white" @onclick="Voltar">
        <i class="bi-arrow-left-circle"></i> Voltar
    </button>
</div>


<QuanPreProd @ref="QuanPre" Quantidade=@Quant VlrUnit=@VlrUnt Prod=@Prod Mostra=@Mostra Confirma=@Confirma EventoRetorno="(() => EvenQuanPreProd())"></QuanPreProd>


@code
{

    [Parameter] public string Mostra { get; set; } = "none";
    [Parameter] public bool Confirma { get; set; } = false;
    [Parameter] public Produto Prod { get; set; } = new();

    private int Quant { get; set; } = 0;
    private Decimal VlrUnt { get; set; } = 0;

    MudaPagina? Muda = null;

    QuanPreProd? QuanPre = null;

    private string NomeProduto { get; set; } = string.Empty;
    private List<Produto>? produtos { get; set; } = new();
    private RetGetProdutos? Registro = new();

    private int Linha { get; set; } = 0;
    private string cor { get; set; } = "white";

    //Propriedades do Componente de Paginação.

    private int NroReg { get; set; }
    private int PageSize { get; set; } = 11;
    private int PageNumber { get; set; } = 1;
    private int BtnInicial { get; set; } = 1;
    private int TotPag { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await CarregarDadosIniciais();
    }


    private async void Inicio(ChangeEventArgs e)
    {
        NomeProduto = e.Value.ToString();

        if (!string.IsNullOrEmpty(NomeProduto))
        {
            await CarregarDados();
        }
        else
        {
            await CarregarDadosIniciais();
        }
    }

    private async Task CarregarDadosIniciais()
    {
        Registro = await _http.GetFromJsonAsync<RetGetProdutos>(@$"/api/v1/produtos/{PageNumber.ToString()}/{PageSize.ToString()}");

        produtos = Registro.ListaProdutos;

        //NomeProduto = produtos[0].NomeProduto;

        NroReg = Registro.TotalReg;

        if (NroReg % PageSize == 0)
        {
            TotPag = NroReg / PageSize;
        }
        else
        {
            TotPag = NroReg / PageSize + 1;
        }
    }

    private async Task CarregarDados()
    {
        if (!string.IsNullOrEmpty(NomeProduto))
        {
            Registro = await _http.GetFromJsonAsync<RetGetProdutos>(@$"/api/v1/produtos/getprodutosnome/?nome={NomeProduto}&PageNumber={PageNumber.ToString()}&PageSize={PageSize.ToString()}");

            produtos = Registro.ListaProdutos;

            NroReg = Registro.TotalReg;

            if (NroReg % PageSize == 0)
            {
                TotPag = NroReg / PageSize;
            }
            else
            {
                TotPag = NroReg / PageSize + 1;
            }
        }
        else
        {
            await CarregarDadosIniciais();
        }
    }

    public void EvenQuanPreProd()
    {

        decimal tot = 0;

        tot = QuanPre.VlrUnit * QuanPre.Quantidade;

        if (QuanPre.Confirma)
        {
            //Adiciona o Item de Pedido a Lista de Itens de Pedidos
            ItPedido ItemPedido = new();
            ItemPedido.VlrUndItem = QuanPre.VlrUnit;
            ItemPedido.VlrTotalItem = tot;
            ItemPedido.Quantidade = QuanPre.Quantidade;
            ItemPedido.NomeProduto = Prod.NomeProduto;
            ItemPedido.UndMed = Prod.Und;
            VarGlobal.ListaItensPedidos.Add(ItemPedido);
            VarGlobal.TotalPedido = VarGlobal.TotalPedido + tot;
        }

        Mostra = "none";
        QuanPre.Confirma = false;
    }

    public async Task ReturnFunc()
    {
        PageNumber = Muda.PageNumb;
        BtnInicial = Muda.BtnInicial;
        await CarregarDados();
    }

    private void Voltar()
    {
        ToPag.NavigateTo("/pedcliente");
    }

    private void Seleciona(Produto produto)
    {
        Mostra = "block";
        Prod.NomeProduto = produto.NomeProduto;
        Prod.Preco = produto.Preco;
        Prod.Und = produto.Und;
    }

}
