@page "/clientes"
@attribute [StreamRendering]
@inject HttpClient _http
@rendermode @(new InteractiveServerRenderMode (prerender:false))
@inject NavigationManager Topag
@inject Cliente CliService

<PageTitle>Clientes</PageTitle>

<TopBanner Texto="Clientes"></TopBanner>
<br />

<div class="container">

    @if (clientes == null)
    {
        <p><em>Aguarde...</em></p>
    }
    else
    {
        <button class="btn-sm btn-primary" style="font-style:italic" @onclick="NewCliente">+ Novo Cliente</button>

        <table class="table col-md-12">
            <thead>
                <tr>
                    <th>Nome Cliente</th>
                    <th>Nro Telefone</th>
                    <th>Contato     </th>
                    <th>Data Cadastro</th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (Cliente item in clientes)
                {
                    <tr>
                        <td>@item.NomeCliente</td>
                        <td>@item.NroTelefone</td>
                        <td>@item.NomeContato</td>
                        <td>@DateOnly.FromDateTime(@item.DataCadastro)</td>
                        <td><button class="btn-sm btn-warning border-dark" @onclick="(() => Seleciona(item))">Alterar</button></td>
                        <td><button class="btn-sm btn-danger border-dark" @onclick="(() => Confirma(item))">Apaga</button></td>
                        <td><button class="btn-sm btn-info border-dark" @onclick="(() => Con_Cliente(item))">Consulta</button></td>
                        <td><button class="btn-sm btn-primary border-dark" @onclick="(() => Seleciona(item))">Pedido</button></td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@if (Sim)
{<div class="container align-content-center">
        <div class="alert alert-danger alert-dismissible" role="alert">
            <strong>Holy guacamole!</strong> You should check in on some of those fields below.

            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close" @onclick="Sair"></button>
        </div>
    </div>
}

<Mensagens @ref="Mensa" BotaoTrue=@MsgBotton Titulo=@Titul Mostra=@Mostr Msg=@Mensag Confirma=@Confirm EventoRetorno="(() => ReturnFuncao())"> </Mensagens>

@code
 {

    Mensagens? Mensa = null;

    public bool Confirm { get; set; } = false;
    public string Mensag { get; set; } = string.Empty;
    public string Titul { get; set; } = string.Empty;
    public string Mostr { get; set; } = "none";
    public string MsgBotton { get; set; } = string.Empty;
    public bool Sim { get; set; } = false;


    public List<Cliente>? clientes = null!;
    //   public Cliente Objcliente = null!;
    public int IdCliente { get; set; } = 0;
    public string? NomeCliente { get; set; } = string.Empty;
    public Cliente Cli = new();

    public void Sair()
    {
        Sim = false;
    }

    protected override async Task OnInitializedAsync()
    {
        clientes = await _http.GetFromJsonAsync<List<Cliente>>(@"/api/v1/clientes");
    }

    public void Confirma(Cliente cli)
    {
        IdCliente = cli.ClienteId;
        NomeCliente = cli.NomeCliente;
        Mensag = $"Cliente: {NomeCliente}";
        Titul = "Confirma Exclusão?";
        Mostr = "block";
        MsgBotton = "Exclui";
    }

    public void Con_Cliente(Cliente cliente)
    {
        CliService.ClienteId = cliente.ClienteId;
        CliService.NomeCliente = cliente.NomeCliente;
        CliService.CpfCliente = cliente.CpfCliente;
        CliService.CnpjCliente = cliente.CnpjCliente;
        CliService.NroTelefone = cliente.NroTelefone;
        CliService.NomeContato = cliente.NomeContato;
        CliService.DataCadastro = cliente.DataCadastro;
        CliService.TipoCliente = cliente.TipoCliente;
        CliService.LimiteCredito = cliente.LimiteCredito;

        Console.WriteLine(cliente.Enderecos.Count);

        CliService.Enderecos = new();
        foreach (var endereco in cliente.Enderecos)
        {
            CliService.Enderecos.Add(endereco);
        }

        Topag.NavigateTo("/concliente");
    }

    public async Task ReturnFuncao()
    {
        if (Mensa?.Confirma == true)
        {
            await ApagaRegistro();
        }
        Confirm = false;
        Mostr = "none";
    }

    public async Task ApagaRegistro()
    {
        await _http.DeleteFromJsonAsync<Cliente>($@"/api/v1/clientes/{IdCliente}");
        await OnInitializedAsync();
    }

    public void Seleciona(Cliente cliente)
    {

    }
    public void NewCliente()
    {
        Topag.NavigateTo("/newcliente");
    }
}
