@page "/newcliente"
@inject NavigationManager ToPag
@rendermode @(new InteractiveServerRenderMode (prerender:false))
@inject HttpClient _http

<TopBanner Texto="Novo Cliente"></TopBanner>
<br />

<div class="card">
    <EditForm Model="@Cliente" OnInvalidSubmit="ErroPreenchimento">
        <DataAnnotationsValidator />
        <div class="card-header">
            <div class="row">
                <div class="col">
                    <div>
                        <InputText class="col-7" style="font-style:italic;border-radius:3px" @bind-Value="@Cliente.NomeCliente" placeholder="Nome do Cliente">Nome do Cliente</InputText>
                        <InputText class="col-4 mx-1" style="font-style:italic;border-radius:3px" @bind-Value="@Cliente.NomeContato" placeholder="Nome do Contato">Nome do Cliente</InputText>
                    </div>
                </div>
                <p></p>
                <div class="row">
                    <div class="col">
                        <div>
                            <InputSelect class="col-2 form-select-sm" style="font-style: italic; border-radius: 1px" @bind-Value="@Cliente.TipoCliente">
                                @foreach (var opc in Enum.GetValues(typeof(ETipoCliente)))
                                {
                                    <option>@opc</option>
                                }
                            </InputSelect>
                            @if ((int)Cliente.TipoCliente == 0)
                            {
                                <InputText class="col-2 mx-2" style="font-style: italic; border-radius: 3px; text-align: right"
                                           @bind-Value="@Cliente.CpfCliente" placeholder="Digite o nro CPF/CNPJ"></InputText>
                            }
                            else
                          if ((int)Cliente.TipoCliente == 1)
                            {
                                <InputText class="col-2 mx-2" style="font-style: italic; border-radius: 3px; text-align: right"
                                           @bind-Value="@Cliente.CpfCliente" placeholder="Digite o nro CPF"></InputText>
                                Cliente.CnpjCliente = null;
                            }
                            else
                          if ((int)Cliente.TipoCliente == 2)
                            {
                                <InputText class="col-3 mx-2" style="font-style: italic; border-radius: 3px; text-align: right"
                                           @bind-Value="@Cliente.CnpjCliente" placeholder="Digite o nro CNPJ"></InputText>
                                Cliente.CpfCliente = null;
                            }
                            <InputText class="col-2 mx-0" style="font-style:italic; border-radius: 3px; text-align: right"
                                       @bind-Value="@Cliente.NroTelefone" placeholder="Digite o nro Telefone"></InputText>
                            <InputNumber class="col-2 mx-1" style="font-style:italic; border-radius: 3px; text-align: right"
                                         @bind-Value="@Cliente.LimiteCredito" placeholder="Digite o Limite de Crédito"></InputNumber>
                            <InputText class="col-2 mx-0" style="font-style:italic; border-radius: 3px; text-align: right; color: darkred "
                                       @bind-Value=@DataCadastro disabled="true"></InputText>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <p></p>
                <h6 style="color:darkred"><em>Endereço</em></h6>
                <div class="col">
                    @*<div>
                            <label class="col-5">Nome da Rua</label>
                            <label class="col-1 mx-1">Nro</label>
                            <label class="col-1 mx-1">Bairro</label>
                            <label class="col-2 mx-1">Cidade</label>
                            <label class="col-1 mx-1">Estado</label>
                            <label class="col-1 mx-1">Cep</label>
                        </div>*@
                    <InputText class="col-1 mx-0" style="border-radius:3px" @bind-Value="@Cliente.Endereco.Cep" placeholder="Cep"></InputText>
                    <button class="btn-sm btn-primary" @onclick="ConsultaCep">Consulta Cep</button>
                    <p></p>
                    <div>
                        <InputText class="col-5 mx-0" style="font-style:italic; border-radius: 3px" @bind-Value="@Cliente.Endereco.NomeRua" placeholder="Logradouro"></InputText>
                        <InputText class="col-1 mx-1" style="font-style: italic; border-radius: 3px" @bind-Value="@Cliente.Endereco.Numero" placeholder="Nro"></InputText>
                        <InputText class="col-1 mx-1" style="font-style: italic; border-radius: 3px" @bind-Value="@Cliente.Endereco.Bairro" placeholder="Bairro"></InputText>
                        <InputText class="col-2 mx-1" style="font-style: italic; border-radius: 3px" @bind-Value="@Cliente.Endereco.Cidade" placeholder="Cidade"></InputText>
                        <InputSelect class="col-1 form-select-sm" style="font-style: italic; border-radius: 3px" @bind-Value="@Cliente.Endereco.Estado">
                            @foreach (var opc_est in Enum.GetValues(typeof(EEstado)))
                            {
                                <option>@opc_est</option>
                            }
                        </InputSelect>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <div class="row">
                <div class="col">
                    <button class="col-1 btn-sm btn-success" @onclick="HabilitarSalvar"> Salvar </button>
                    <button class="col-1 btn-sm btn-primary" @onclick="Voltar">Voltar </button>
                </div>
            </div>
        </div>
    </EditForm>
</div>

@if (Sim)
{
    <p></p>
    <div class="container">
        <div class="alert alert-danger alert-dismissible" role="alert">
            <strong>Atenção!</strong> Existem Campos que não foram preenchidos.
            <button class="btn-sm btn-close" data-bs-dismiss="alert" aria-label="Close" @onclick="Sair"></button>
        </div>
    </div>
}

<Mensagens @ref="Mensa" BotaoTrue=@MsgButton Titulo=@Titul Mostra=@Mostr Msg=@Mensag Confirma=@Confirm EventoRetorno="(() => ReturnFuncao())"> </Mensagens>

@code
{
    Mensagens? Mensa = null;

    public bool Confirm { get; set; } = false;
    public string Mensag { get; set; } = string.Empty;
    public string Titul { get; set; } = string.Empty;
    public string Mostr { get; set; } = "none";
    public string MsgButton { get; set; } = string.Empty;
    public bool Sim { get; set; } = false;

    public Cliente Cliente = new();
    private bool EnabledSalvar = false;
    public string DataCadastro = $"{DateTime.Now:dd/MM/yyy}";

    private async Task ConsultaCep()
    {
        if (Cliente.Endereco.Cep != null)
        {

            string? value;

            Dictionary<string, string>? Dados = new();

            Dados = await _http.GetFromJsonAsync<Dictionary<string, string>>($"https://viacep.com.br/ws/{Cliente.Endereco.Cep}/json");

            bool hasValue = Dados.TryGetValue("logradouro", out value);

            if (hasValue)
            {
                Cliente.Endereco.NomeRua = value;

                Dados.TryGetValue("bairro", out value);
                Cliente.Endereco.Bairro = value;

                Dados.TryGetValue("localidade", out value);
                Cliente.Endereco.Cidade = value;

                Dados.TryGetValue("uf", out value);

                var lista = Enum.GetValues(typeof(EEstado)).Cast<int>().ToList();

                foreach (var item in lista)
                {
                    if ((item.ToString()).Equals(value))
                    {
                        Console.WriteLine(item);
                    }
                }

            }
        }
    }
    public void ErroPreenchimento()
    {
        Sim = true;
    }

    public void Sair()
    {
        Sim = false;
    }

    public async Task ReturnFuncao()
    {
        if (Mensa?.Confirma == true)
        {
            await Salvar();
        }
        Confirm = false;
        Mostr = "none";
    }

    private void HabilitarSalvar()
    {
        EnabledSalvar = (Cliente.NomeCliente != null && Cliente.NomeContato != null && Cliente.NroTelefone != null);

        if (Cliente.TipoCliente != ETipoCliente.TipoCliente)
        {
            if (Cliente.TipoCliente == ETipoCliente.Fisica && Cliente.CpfCliente == null)
            {
                EnabledSalvar = false;
            }
            else
                if (Cliente.TipoCliente == ETipoCliente.Fisica && Cliente.CpfCliente != null)
            {
                EnabledSalvar = true;
            }
            else
            {
                if (Cliente.TipoCliente == ETipoCliente.Juridica && Cliente.CnpjCliente == null)
                {
                    EnabledSalvar = false;
                }
                else
                if (Cliente.TipoCliente == ETipoCliente.Juridica && Cliente.CnpjCliente != null)
                {
                    EnabledSalvar = true;
                }
            }
        }
        else
        {
            if (Cliente.TipoCliente == ETipoCliente.TipoCliente)
            {
                EnabledSalvar = false;
            }
            else
            {
                if (Cliente.Endereco.NomeRua != null && Cliente.Endereco.Numero != null && Cliente.Endereco.Bairro != null &&
                    Cliente.Endereco.Cidade != null && Cliente.Endereco.Cep != null)
                {
                    EnabledSalvar = true;
                }
            }
        }

        Sim = !EnabledSalvar;

        if (EnabledSalvar) ConfirmaSalvar();
    }

    public void ConfirmaSalvar()
    {
        Console.WriteLine(Cliente);

        MsgButton = "Confirma";

        Mensag = $"Cliente: {Cliente.NomeCliente}";
        Titul = "Confirma Inclusão";
        Mostr = "block";

        Cliente.DataCadastro = Convert.ToDateTime(DataCadastro);
    }

    public void Voltar()
    {
        ToPag.NavigateTo("/clientes");
    }

    public async Task Salvar()
    {
        HttpResponseMessage cliente = await _http.PostAsJsonAsync<Cliente>("/api/v1/clientes", Cliente);

        ToPag.NavigateTo("/clientes");
    }
}
