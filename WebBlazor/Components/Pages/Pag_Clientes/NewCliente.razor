@page "/newcliente"
@inject NavigationManager ToPag
@rendermode @(new InteractiveServerRenderMode (prerender:false))
@inject HttpClient _http

<TopBanner Texto="Novo Cliente"></TopBanner>

<div class="card">
    <EditForm Model="@Cliente" OnInvalidSubmit="ErroPreenchimento" OnValidSubmit="ConfirmaSalvar">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="card-header">
            <div class="row">
                <div class="col">
                    <div>
                        <label class="col-7">Nome do Cliente</label>
                        <label class="col-4 mx-1">Nome do Contato</label>
                    </div>
                    <div>
                        <InputText class="col-7" style="border-radius:4px" @bind-Value="@Cliente.NomeCliente">Nome do Cliente</InputText>
                        <InputText class="col-4 mx-1" style="border-radius:4px" @bind-Value="@Cliente.NomeContato">Nome do Cliente</InputText>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <div>
                        <label class="col-2">Tipo Cliente</label>

                        @if ((int)Cliente.TipoCliente == 0)
                        {
                            <label class="col-2 mx-2" style="text-align: right">CPF</label>
                        }
                        else
                        {
                            <label class="col-3 mx-2" style="text-align: right">CNPJ</label>
                        }
                        <label class="col-2 mx-0" style="text-align: right">Nro Telefone</label>
                        <label class="col-2 mx-1" style="text-align: right">Limite de Crédito</label>
                        <label class="col-2 mx-1" style="text-align: right">Data de Cadastro</label>

                    </div>
                    <div>
                        <InputSelect class="col-2 form-select-sm" style="border-radius:1px" @bind-Value="@Cliente.TipoCliente">
                            @foreach (var opc in Enum.GetValues(typeof(ETipoCliente)))
                            {
                                <option>@opc</option>
                            }
                        </InputSelect>

                        @if ((int)Cliente.TipoCliente == 0)
                        {
                            <InputText class="col-2 mx-2" style="border-radius: 4px; text-align: right" @bind-Value="@Cliente.CpfCliente"></InputText>
                            Cliente.CnpjCliente = "0";
                        }
                        else
                        {
                            <InputText class="col-3 mx-2" style="border-radius: 4px; text-align: right" @bind-Value="@Cliente.CnpjCliente"></InputText>
                            Cliente.CpfCliente = "0";
                        }

                        <InputText class="col-2 mx-0" style="border-radius: 4px; text-align: right" @bind-Value="@Cliente.NroTelefone"></InputText>

                        <InputNumber class="col-2 mx-1" style="border-radius:4px; text-align:right" @bind-Value="@Cliente.LimiteCredito"></InputNumber>

                        <InputText class="col-2 mx-1" style="border-radius:4px; text-align:right; color:darkred " @bind-Value=@DataCadastro disabled="true"></InputText>

                    </div>
                </div>
            </div>
            <label>------------ Endereços ------------</label>
            <br/>
            @if (!IdEnt)
            {
                <button class="col-2 btn-sm btn-outline-primary" @onclick="MudaEnt">Entrega</button>
                <button class="col-2 btn-sm btn-outline-danger invisible">Exclui    </button>
            }
            else
            {
                <button class="col-2 btn-sm btn-outline-primary disabled">Entrega    </button>
                <button class="col-2 btn-sm btn-outline-danger visible" @onclick="MudaEnt">Exclui</button>

                <div class="row">
                    <div class="col">
                        <div>
                            <label class="col-5">Nome da Rua</label>
                            <label class="col-1 mx-1">Nro</label>
                            <label class="col-1 mx-1">Bairro</label>
                            <label class="col-2 mx-1">Cidade</label>
                            <label class="col-1 mx-1">Estado</label>
                            <label class="col-1 mx-1">Cep</label>

                        </div>
                        <InputText class="col-5 mx-0" style="border-radius: 4px" @bind-Value="@Cliente.Enderecos[0].NomeRua"></InputText>
                        @*<ValidationMessage For="@(()=>Cliente.Enderecos[0].NomeRua)"></ValidationMessage>*@

                        <InputText class="col-1 mx-1" style="border-radius:4px" @bind-Value="@Cliente.Enderecos[0].Numero"></InputText>

                        <InputText class="col-1 mx-1" style="border-radius:4px" @bind-Value="@Cliente.Enderecos[0].Bairro"></InputText>

                        <InputText class="col-2 mx-1" style="border-radius:4px" @bind-Value="@Cliente.Enderecos[0].Cidade"></InputText>

                        <InputSelect class="col-1 form-select-sm" style="border-radius:4px" @bind-Value="@Cliente.Enderecos[0].Estado">
                            @foreach (var opc_est in Enum.GetValues(typeof(EEstado)))
                            {
                                <option>@opc_est</option>
                            }
                        </InputSelect>
                        <InputText class="col-1 mx-1" style="border-radius:1px" @bind-Value="@Cliente.Enderecos[0].Cep"></InputText>
                    </div>
                </div>
            }

            <p></p>
            @if (!IdFat)
            {
                <button class="col-2 btn-sm btn-outline-primary" @onclick="MudaFat">Faturamento</button>
                <button class="col-2 btn-sm btn-outline-danger invisible">Exclui    </button>
            }
            else
            {
                <button class="col-2 btn-sm btn-outline-primary disabled">Faturamento</button>
                <button class="col-2 btn-sm btn-outline-danger visible" @onclick="MudaFat">Exclui</button>

                <div class="row">
                    <div class="col">
                        <div>
                            <label class="col-5">Nome da Rua</label>
                            <label class="col-1 mx-1">Nro</label>
                            <label class="col-1 mx-1">Bairro</label>
                            <label class="col-2 mx-1">Cidade</label>
                            <label class="col-1 mx-1">Estado</label>
                            <label class="col-1 mx-1">Cep</label>

                        </div>
                        <InputText class="col-5 mx-0" style="border-radius: 4px" @bind-Value="@Cliente.Enderecos[1].NomeRua"></InputText>

                        <InputText class="col-1 mx-1" style="border-radius:4px" @bind-Value="@Cliente.Enderecos[1].Numero"></InputText>

                        <InputText class="col-1 mx-1" style="border-radius:4px" @bind-Value="@Cliente.Enderecos[1].Bairro"></InputText>

                        <InputText class="col-2 mx-1" style="border-radius:4px" @bind-Value="@Cliente.Enderecos[1].Cidade"></InputText>

                        <InputSelect class="col-1 form-select-sm" style="border-radius:4px" @bind-Value="@Cliente.Enderecos[1].Estado">
                            @foreach (var opc_est in Enum.GetValues(typeof(EEstado)))
                            {
                                <option>@opc_est</option>
                            }
                        </InputSelect>
                        <InputText class="col-1 mx-1" style="border-radius:4px" @bind-Value="@Cliente.Enderecos[1].Cep"></InputText>
                    </div>
                </div>
            }
            <p></p>

            @if (!IdCob)
            {
                <button class="col-2 btn-sm btn-outline-primary" @onclick="MudaCob">Cobrança</button>
                <button class="col-2 btn-sm btn-outline-danger invisible">Exclui    </button>
            }
            else
            {
                <button class="col-2 btn-sm btn-outline-primary disabled">Cobrança</button>
                <button class="col-2 btn-sm btn-outline-danger visible" @onclick="MudaCob">Exclui</button>

                <div class="row">
                    <div class="col">
                        <div>
                            <label class="col-5">Nome da Rua</label>
                            <label class="col-1 mx-1">Nro</label>
                            <label class="col-1 mx-1">Bairro</label>
                            <label class="col-2 mx-1">Cidade</label>
                            <label class="col-1 mx-1">Estado</label>
                            <label class="col-1 mx-1">Cep</label>
                        </div>
                        <InputText class="col-5 mx-0" style="border-radius: 4px" @bind-Value="@Cliente.Enderecos[2].NomeRua"></InputText>

                        <InputText class="col-1 mx-1" style="border-radius:4px" @bind-Value="@Cliente.Enderecos[2].Numero"></InputText>

                        <InputText class="col-1 mx-1" style="border-radius:4px" @bind-Value="@Cliente.Enderecos[2].Bairro"></InputText>

                        <InputText class="col-2 mx-1" style="border-radius:4px" @bind-Value="@Cliente.Enderecos[2].Cidade"></InputText>

                        <InputSelect class="col-1 form-select-sm" style="border-radius:4px" @bind-Value="@Cliente.Enderecos[2].Estado">
                            @foreach (var opc_est in Enum.GetValues(typeof(EEstado)))
                            {
                                <option>@opc_est</option>
                            }
                        </InputSelect>
                        <InputText class="col-1 mx-1" style="border-radius:4px" @bind-Value="@Cliente.Enderecos[2].Cep"></InputText>
                    </div>
                </div>
            }
        </div>
        <div class="card-footer">
            <div>
                <button type="submit" class="btn-sm btn-success"> Salvar </button>
                <button class="btn-sm btn-primary" @onclick="Voltar"> Voltar </button>
            </div>
        </div>
    </EditForm>
</div>

@if (Sim)
{<div class="container align-content-center">
        <div class="alert alert-danger alert-dismissible" role="alert">
            <strong>Atenção!</strong> Existem Campos que não foram preenchidos.

            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close" @onclick="Sair"></button>
        </div>
    </div>
}

<Mensagens @ref="Mensa" BotaoTrue=@MsgButton Titulo=@Titul Mostra=@Mostr Msg=@Mensag Confirma=@Confirm EventoRetorno="(() => ReturnFuncao())"> </Mensagens>

@code
 {
    Mensagens? Mensa = null;

    public bool Confirm { get; set; } = false;
    public string Mensag { get; set; } = string.Empty;
    public string Titul { get; set; } = string.Empty;
    public string Mostr { get; set; } = "none";
    public string MsgButton { get; set; } = string.Empty;
    public bool Sim { get; set; } = false;

    public Cliente Cliente = new();
    public bool IdEnt = false;
    public bool IdFat = false;
    public bool IdCob = false;

    public string DataCadastro = $"{DateTime.Now:dd/MM/yyy}";

    public void ErroPreenchimento()
    {
        Sim = true;
    }

    public void Sair()
    {
        Sim = false;
    }

    public async Task ReturnFuncao()
    {
        if (Mensa?.Confirma == true)
        {
            await Salvar();
        }
        Confirm = false;
        Mostr = "none";
    }

    protected override void OnInitialized()
    {
        for (int i = 0; i < 3; i++)
        {
            Cliente.Enderecos.Add(new Endereco());
        }
        Cliente.Enderecos[0].TipoEnd = ETipoEndereco.Entrega;
        Cliente.Enderecos[1].TipoEnd = ETipoEndereco.Faturamento;
        Cliente.Enderecos[2].TipoEnd = ETipoEndereco.Cobranca;
    }


    public void MudaEnt()
    {
        IdEnt = !IdEnt;
        if (!IdEnt)
        {
            var x = Cliente.Enderecos.FindIndex(x => x.TipoEnd == ETipoEndereco.Entrega);
            Cliente.Enderecos[x].NomeRua = "";
        }
    }

    public void MudaFat()
    {
        IdFat = !IdFat;
        if (!IdFat)
        {
            var y = Cliente.Enderecos.FindIndex(x => x.TipoEnd == ETipoEndereco.Faturamento);
            Cliente.Enderecos[y].NomeRua = "";
        }
    }

    public void MudaCob()
    {
        IdCob = !IdCob;
        if (!IdCob)
        {
            var z = Cliente.Enderecos.FindIndex(x => x.TipoEnd == ETipoEndereco.Cobranca);
            Cliente.Enderecos[z].NomeRua = "";
        }
    }

    public void ConfirmaSalvar()
    {
        MsgButton = "Confirma";

        Mensag = $"Cliente: {Cliente.NomeCliente}";
        Titul = "Confirma Inclusão";
        Mostr = "block";

        Cliente.Enderecos.RemoveAll(x => x.NomeRua == null);
        Cliente.DataCadastro = Convert.ToDateTime(DataCadastro);

        IdEnt = false;
        IdFat = false;
        IdCob = false;
    }

    public void Voltar()
    {
        ToPag.NavigateTo("/clientes");
    }

    public async Task Salvar()
    {
        HttpResponseMessage cliente = await _http.PostAsJsonAsync<Cliente>("/api/v1/clientes", Cliente);

        ToPag.NavigateTo("/clientes");
    }
}
