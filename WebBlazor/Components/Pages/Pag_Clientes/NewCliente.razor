@page "/newcliente"
@inject NavigationManager ToPag
@rendermode @(new InteractiveServerRenderMode (prerender:false))
@inject HttpClient _http

<TopBanner Texto="Novo Cliente"></TopBanner>
<br />

<div class="card">
    <EditForm Model="@Cliente" OnInvalidSubmit="ErroPreenchimento">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="card-header">
            <div class="row">
                <div class="col">
                    <div>
                        <label class="col-7">Nome do Cliente</label>
                        <label class="col-4 mx-1">Nome do Contato</label>
                    </div>
                    <div>
                        <InputText class="col-7" style="border-radius:4px" @bind-Value="@Cliente.NomeCliente">Nome do Cliente</InputText>
                        <InputText class="col-4 mx-1" style="border-radius:4px" @bind-Value="@Cliente.NomeContato">Nome do Cliente</InputText>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <div>
                            <label class="col-2">Tipo Cliente</label>
                            @if ((int)Cliente.TipoCliente == 0)
                            {
                                <label class="col-2 mx-2" style="text-align: right">CPF</label>
                            }
                            else
                            {
                                <label class="col-3 mx-2" style="text-align: right">CNPJ</label>
                            }
                            <label class="col-2 mx-0" style="text-align: right">Nro Telefone</label>
                            <label class="col-2 mx-1" style="text-align: right">Limite de Crédito</label>
                            <label class="col-2 mx-1" style="text-align: right">Data de Cadastro</label>

                            <InputSelect class="col-2 form-select-sm" style="border-radius:1px" @bind-Value="@Cliente.TipoCliente">
                                @foreach (var opc in Enum.GetValues(typeof(ETipoCliente)))
                                {
                                    <option>@opc</option>
                                }
                            </InputSelect>
                            @if ((int)Cliente.TipoCliente == 0)
                            {
                                <InputText class="col-2 mx-2" style="border-radius: 4px; text-align: right" @bind-Value="@Cliente.CpfCliente"></InputText>
                                Cliente.CnpjCliente = null;
                            }
                            else
                            {
                                <InputText class="col-3 mx-2" style="border-radius: 4px; text-align: right" @bind-Value="@Cliente.CnpjCliente"></InputText>
                                Cliente.CpfCliente = null;
                            }
                            <InputText class="col-2 mx-0" style="border-radius: 4px; text-align: right" @bind-Value="@Cliente.NroTelefone"></InputText>

                            <InputNumber class="col-2 mx-1" style="border-radius:4px; text-align:right" @bind-Value="@Cliente.LimiteCredito"></InputNumber>

                            <InputText class="col-2 mx-1" style="border-radius:4px; text-align:right; color:darkred " @bind-Value=@DataCadastro disabled="true"></InputText>

                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <h5 style="color:darkred"><em>Endereço</em></h5>
                <div class="col">
                    <div>
                        <label class="col-5">Nome da Rua</label>
                        <label class="col-1 mx-1">Nro</label>
                        <label class="col-1 mx-1">Bairro</label>
                        <label class="col-2 mx-1">Cidade</label>
                        <label class="col-1 mx-1">Estado</label>
                        <label class="col-1 mx-1">Cep</label>
                    </div>
                    <InputText class="col-5 mx-0" style="border-radius: 4px" @bind-Value="@Cliente.Endereco.NomeRua"></InputText>
                    <InputText class="col-1 mx-1" style="border-radius:4px" @bind-Value="@Cliente.Endereco.Numero"></InputText>
                    <InputText class="col-1 mx-1" style="border-radius:4px" @bind-Value="@Cliente.Endereco.Bairro"></InputText>
                    <InputText class="col-2 mx-1" style="border-radius:4px" @bind-Value="@Cliente.Endereco.Cidade"></InputText>
                    <InputSelect class="col-1 form-select-sm" style="border-radius:4px" @bind-Value="@Cliente.Endereco.Estado">
                        @foreach (var opc_est in Enum.GetValues(typeof(EEstado)))
                        {
                            <option>@opc_est</option>
                        }
                    </InputSelect>
                    <InputText class="col-1 mx-1" style="border-radius:4px" @bind-Value="@Cliente.Endereco.Cep"></InputText>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <div class="row">
                <div class="col">
                    <button class="col-2 btn-sm btn-success" @onclick="HabilitarSalvar"> Salvar </button>
                    <button class="col-2 btn-sm btn-primary" @onclick="Voltar"> Voltar </button>
                </div>
            </div>
        </div>

    </EditForm>
</div>

@if (Sim)
{
    <div class="container align-content-center">
        <div class="alert alert-danger alert-dismissible" role="alert">
            <strong>Atenção!</strong> Existem Campos que não foram preenchidos.

            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close" @onclick="Sair"></button>
        </div>
    </div>
}

<Mensagens @ref="Mensa" BotaoTrue=@MsgButton Titulo=@Titul Mostra=@Mostr Msg=@Mensag Confirma=@Confirm EventoRetorno="(() => ReturnFuncao())"> </Mensagens>

@code
{
    Mensagens? Mensa = null;

    public bool Confirm { get; set; } = false;
    public string Mensag { get; set; } = string.Empty;
    public string Titul { get; set; } = string.Empty;
    public string Mostr { get; set; } = "none";
    public string MsgButton { get; set; } = string.Empty;
    public bool Sim { get; set; } = false;

    public Cliente Cliente = new();
    private bool EnabledSalvar = false;
    public string DataCadastro = $"{DateTime.Now:dd/MM/yyy}";

    public void ErroPreenchimento()
    {
        Sim = true;
    }

    public void Sair()
    {
        Sim = false;
    }

    public async Task ReturnFuncao()
    {
        if (Mensa?.Confirma == true)
        {
            await Salvar();
        }
        Confirm = false;
        Mostr = "none";
    }

    private void HabilitarSalvar()
    {
        EnabledSalvar = (Cliente.NomeCliente != null && Cliente.NomeContato != null && Cliente.NroTelefone != null);
     
        if (Cliente.TipoCliente == ETipoCliente.Fisica && Cliente.CpfCliente == null)
        {
            EnabledSalvar = false;
        }
        else
        {
            if (Cliente.TipoCliente == ETipoCliente.Fisica && Cliente.CpfCliente != null)
            {
                EnabledSalvar = true;
            }
        }

        if (Cliente.TipoCliente == ETipoCliente.Juridica && Cliente.CnpjCliente == null)
        {
            EnabledSalvar = false;
        }
        else
        {
            if (Cliente.TipoCliente == ETipoCliente.Juridica && Cliente.CnpjCliente != null)
            {
                EnabledSalvar = true;
            }
        }

        EnabledSalvar = (Cliente.Endereco.NomeRua != null && Cliente.Endereco.Numero != null && Cliente.Endereco.Bairro != null &&
            Cliente.Endereco.Cidade != null && Cliente.Endereco.Cep != null);

        if (EnabledSalvar) ConfirmaSalvar();
    }

    public void ConfirmaSalvar()
    {
        Console.WriteLine(Cliente);

        MsgButton = "Confirma";

        Mensag = $"Cliente: {Cliente.NomeCliente}";
        Titul = "Confirma Inclusão";
        Mostr = "block";

        Cliente.DataCadastro = Convert.ToDateTime(DataCadastro);
    }

    public void Voltar()
    {
        ToPag.NavigateTo("/clientes");
    }

    public async Task Salvar()
    {
        HttpResponseMessage cliente = await _http.PostAsJsonAsync<Cliente>
    ("/api/v1/clientes", Cliente);

        ToPag.NavigateTo("/clientes");
    }
}
